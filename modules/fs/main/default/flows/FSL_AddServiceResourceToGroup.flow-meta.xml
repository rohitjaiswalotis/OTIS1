<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>59.0</apiVersion>
    <assignments>
        <name>Assign_UserId_to_Collection</name>
        <label>Assign UserId to Collection</label>
        <locationX>506</locationX>
        <locationY>600</locationY>
        <assignmentItems>
            <assignToReference>UserIDCollection</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_through_All_STM_records_to_fetch_Users_in_Them.ServiceResource.RelatedRecordId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_through_All_STM_records_to_fetch_Users_in_Them</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>If_Member_Exists</name>
        <label>If Member Exists</label>
        <locationX>418</locationX>
        <locationY>1008</locationY>
        <defaultConnector>
            <targetReference>Add_Group_Member_To_Group1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_Present</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Group_Members</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Delete_Existing_GroupMembers</targetReference>
            </connector>
            <label>If Present</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>NewRecord</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW()</expression>
    </formulas>
    <interviewLabel>Add ServiceResource to Group {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Add ServiceResource To Group</label>
    <loops>
        <name>Loop_through_All_STM_records_to_fetch_Users_in_Them</name>
        <label>Loop through All STM records to fetch Users in Them</label>
        <locationX>418</locationX>
        <locationY>492</locationY>
        <collectionReference>Get_All_Related_STM_records_of_route</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assign_UserId_to_Collection</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Get_Public_Group_With_Route_Name</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Loop_UserIds_from_Collection</name>
        <label>Loop UserIds from Collection</label>
        <locationX>286</locationX>
        <locationY>1224</locationY>
        <collectionReference>UserIDCollection</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Add_Group_Member_To_Group</targetReference>
        </nextValueConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Add_Group_Member_To_Group</name>
        <label>Add Group Member To Group</label>
        <locationX>374</locationX>
        <locationY>1332</locationY>
        <connector>
            <targetReference>Loop_UserIds_from_Collection</targetReference>
        </connector>
        <inputAssignments>
            <field>GroupId</field>
            <value>
                <elementReference>Get_Public_Group_With_Route_Name.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>Loop_UserIds_from_Collection</elementReference>
            </value>
        </inputAssignments>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Add_Group_Member_To_Group1</name>
        <label>Add Group Member To Group</label>
        <locationX>550</locationX>
        <locationY>1116</locationY>
        <inputAssignments>
            <field>GroupId</field>
            <value>
                <elementReference>Get_Public_Group_With_Route_Name.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>$Record.ServiceResource.RelatedRecord.Id</elementReference>
            </value>
        </inputAssignments>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordDeletes>
        <name>Delete_Existing_GroupMembers</name>
        <label>Delete Existing GroupMembers</label>
        <locationX>286</locationX>
        <locationY>1116</locationY>
        <connector>
            <targetReference>Loop_UserIds_from_Collection</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Public_Group_With_Route_Name.Id</elementReference>
            </value>
        </filters>
        <object>GroupMember</object>
    </recordDeletes>
    <recordLookups>
        <name>Get_All_Related_STM_records_of_route</name>
        <label>Get All Related STM records of route</label>
        <locationX>418</locationX>
        <locationY>384</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_through_All_STM_records_to_fetch_Users_in_Them</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ServiceTerritoryId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Route_Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>ServiceTerritoryMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Group_Members</name>
        <label>Get Group Members</label>
        <locationX>418</locationX>
        <locationY>900</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>If_Member_Exists</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Public_Group_With_Route_Name.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Public_Group_With_Route_Name</name>
        <label>Get Public Group With Route Name</label>
        <locationX>418</locationX>
        <locationY>792</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Group_Members</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ServiceTerritory.Name</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Route_Record</name>
        <label>Get Route Record</label>
        <locationX>418</locationX>
        <locationY>276</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_All_Related_STM_records_of_route</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ServiceTerritoryId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ServiceTerritory</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <object>ServiceTerritoryMember</object>
        <recordTriggerType>Create</recordTriggerType>
        <scheduledPaths>
            <name>Scheduled_Path</name>
            <connector>
                <targetReference>Get_Route_Record</targetReference>
            </connector>
            <label>Scheduled Path</label>
            <offsetNumber>0</offsetNumber>
            <offsetUnit>Minutes</offsetUnit>
            <timeSource>RecordTriggerEvent</timeSource>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Obsolete</status>
    <variables>
        <name>UserIDCollection</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
