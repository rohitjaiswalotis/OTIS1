name: 'Execute multi-step Script against Set of Target Orgs'


trigger: none
    
pr: none


variables:
- template: templates/variables.yml


parameters:


- name: pathToFolder
  displayName: Path to Folder with Steps
  type: string

- name: stepToRun
  displayName: Step to run
  type: string
  default: all

- name: targetOrgAuthFileNames
  displayName: Target Org Auth File Names (comma-separated)
  type: string

- name: saveFolderAsArtifact
  displayName: Save Folder as Artifact?
  type: boolean
  default: false

- name: continueOnError
  displayName: Continue on Error?
  type: boolean
  default: false

- name: enableDebugMode
  displayName: Debug Mode?
  type: boolean
  default: false


stages:
    
    - stage: Execute
      
      displayName: Execute
      dependsOn: []
      
      jobs:
          
          - job: RunScript
            
            displayName: 'Run Script against Set of Target Orgs'                         
            
            timeoutInMinutes: 0
            
            pool:
                vmImage: 'ubuntu-latest'

            steps:
            
            - template: templates/init.yml
            
            
            - ${{ each targetOrgAuthFileName in split(parameters.targetOrgAuthFileNames, ',')}}:
              
              - task: DownloadSEcureFile@1
                inputs:
                    secureFile: ${{ targetOrgAuthFileName }}
                displayName: 'Get Target Org auth file' 
                
                
              - template: templates/runScript.yml
                parameters:
                  pathToFolder: ${{ parameters.pathToFolder }}
                  stepToRun: ${{ parameters.stepToRun }}
                  targetOrgAuthFilePath: $(Agent.TempDirectory)/${{ targetOrgAuthFileName }}
                  saveFolderAsArtifact: ${{ parameters.saveFolderAsArtifact }}
                  folderArtifactName: ScriptFolder_${{ targetOrgAuthFileName }}_$(Build.BuildId)
                  continueOnError: ${{ parameters.continueOnError }}
                  enableDebugMode: ${{ parameters.enableDebugMode }}
                
              
